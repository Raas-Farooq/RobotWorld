{"version":3,"sources":["reportWebVitals.js","Components/Robot.js","Components/fun.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorChecking.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Robot","name","email","id","className","src","width","height","alt","FunRobo","robo","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","children","require","Component","ErrorChecking","Children","state","hasError","this","App","onSearchChange","event","setState","target","value","fetch","response","json","users","filterRobots","filter","toLowerCase","includes","length","Fragment","ReactDOM","render","document","getElementById"],"mappings":"+JAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,cCSCQ,MAbf,YAAqC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAAOC,EAAK,EAALA,GAE3B,OAEI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,GAAMG,MAAM,MAAMC,OAAO,MAAMC,IAAI,UACzE,gCAAK,6BAAKP,IACV,4BAAIC,W,mCCYGO,EAlBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAGhB,OACI,8BAEIA,EAAKC,KAAI,SAACC,EAAMC,GAChB,OACF,cAAC,EAAD,CACAZ,KAAMS,EAAKG,GAAGZ,KACdE,GAAIO,EAAKG,GAAGV,GACZD,MAAOQ,EAAKG,GAAGX,OAHHW,SCDLC,EAVG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,qBAAKZ,UAAU,MAAf,SACA,uBAAOA,UAAU,mCACjBa,KAAK,SACLC,YAAY,uBACZC,SAAUH,OCCHI,EAPA,SAACC,GACZ,OACA,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAO,kBAAmBjB,OAAO,SAAjE,SACKc,EAAMI,Y,ECJiBC,EAAQ,GAAhCC,E,EAAAA,UAmBOC,G,EAnBIC,S,kDAGf,aAAc,IAAD,8BACT,gBACKC,MAAM,CACPC,UAAS,GAHJ,E,0CAOb,WACI,OAAGC,KAAKF,MAAMC,SACF,2DAGDC,KAAKX,MAAMI,a,GAbFE,ICqDbM,E,kDA7CX,aAAc,IAAD,8BACT,gBAYRC,eAAiB,SAACC,GAEb,EAAKC,SAAS,CAACrB,YAAYoB,EAAME,OAAOC,SAbrC,EAAKR,MAAQ,CACbpB,KAAK,GACLK,YAAY,IAJH,E,qDAOb,WAAoB,IAAD,OACfwB,MAAM,8CACL7C,MAAK,SAAA8C,GAAQ,OAAGA,EAASC,UACzB/C,MAAK,SAAAgD,GAAK,OAAG,EAAKN,SAAS,CAAC1B,KAAKgC,S,oBAStC,WACE,IAAD,OACSC,EAAeX,KAAKF,MAAMpB,KAAKkC,QAAO,SAAAlC,GACxC,OAAOA,EAAKT,KAAK4C,cAAcC,SAAS,EAAKhB,MAAMf,YAAY8B,kBAE9D,OAA+B,IAA3Bb,KAAKF,MAAMpB,KAAKqC,OACT,wDAKJ,cAAC,IAAMC,SAAP,UACI,sBAAK5C,UAAU,KAAf,UACA,6CACA,cAAC,EAAD,CAAWY,aAAgBgB,KAAKE,iBAChC,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAASxB,KAAQiC,iB,GArCvBhB,aCClBsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1B7D,K","file":"static/js/main.b665e650.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'tachyons';\r\n\r\n\r\nfunction Robot( { name, email, id }){\r\n   \r\n    return(\r\n        \r\n        <div className=\"bg-light-green dib pa3 ma1 br2 grow bw2 shadow-5 tc\">\r\n            <img src={`https://robohash.org/${id}`} width=\"150\" height=\"150\" alt=\"Robot\"></img>\r\n        <div><h3>{name}</h3>\r\n        <p>{email}</p>\r\n        </div>\r\n        </div>\r\n       \r\n    );\r\n} \r\nexport default Robot;","import React from 'react';\r\nimport Robot from './Robot';\r\nimport robo from './robo';\r\n\r\nconst FunRobo = ({robo}) => {\r\n\r\n\r\n  return (\r\n      <div>\r\n          {\r\n          robo.map((user, i) =>{\r\n          return (\r\n        <Robot key={i}\r\n        name={robo[i].name} \r\n        id={robo[i].id}\r\n        email={robo[i].email} />\r\n          );\r\n          })\r\n        }\r\n      </div>\r\n  )\r\n}\r\nexport default FunRobo;","\r\nconst SearchBox = ({searchField, searchChange}) =>{\r\n    return (\r\n        <div className=\"pa2\">\r\n        <input className=\"ba pa3 b--green bg-lightest-blue\" \r\n        type=\"search\" \r\n        placeholder=\"Type your fvrt robot\" \r\n        onChange={searchChange} />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","\r\nconst Scroll = (props) => {\r\n    return (\r\n    <div style={{overflow:'scroll', border:'2px solid black', height:'300px'}}>\r\n        {props.children}\r\n    </div>\r\n    )\r\n}\r\nexport default Scroll;","const { Component, Children } = require(\"react\");\r\n\r\nclass ErrorChecking extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            hasError:false\r\n        }\r\n        \r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return (<h1> O! There is some Issue..</h1>)\r\n        }\r\n        else{\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\nexport default ErrorChecking;","\r\nimport FunRobo from '../Components/fun';\r\nimport React, {Component } from 'react';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\nimport Robot from '../Components/Robot';\r\nimport './App.css';\r\nimport ErrorChecking from '../Components/ErrorChecking';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n        robo:[],\r\n        searchField:''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response =>response.json())\r\n        .then(users =>this.setState({robo:users}))\r\n         }\r\n\r\nonSearchChange = (event) => \r\n{\r\n     this.setState({searchField:event.target.value});\r\n    \r\n}\r\n\r\n    render()\r\n     {\r\n        const filterRobots = this.state.robo.filter(robo => {\r\n            return robo.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n             })\r\n             if (this.state.robo.length === 0){\r\n                 return <h1> Loading.. Please Wait</h1>\r\n             }\r\n             else\r\n             {\r\n                return (\r\n                    <React.Fragment>\r\n                        <div className=\"tc\">\r\n                        <h1>BE GRATEFUL</h1>\r\n                        <SearchBox searchChange = {this.onSearchChange}/>\r\n                        <Scroll>\r\n                        <ErrorChecking>\r\n                        <FunRobo robo = {filterRobots} />\r\n                        </ErrorChecking>\r\n                        </Scroll>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )\r\n                }\r\n             }\r\n}\r\nexport default App;\r\n\r\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Robot from './Components/Robot';\nimport 'tachyons';\nimport './Containers/App.css';\nimport App from './Containers/App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}